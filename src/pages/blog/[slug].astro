---
import BlogPostMeta from '../../components/BlogPostMeta.astro'
import ContentLayout from '../../layouts/ContentLayout.astro'
import { SITE_URL } from '../../config'
import { getEntry, getCollection, render } from 'astro:content'

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog', ({ data }) => {
    return !data.draft && !data.external
  })
  return blogPosts.map((post) => {
    return { params: { slug: post.id } }
  })
}

const { slug } = Astro.params

if (typeof slug !== 'string') {
  throw Error(`slug should be string. Received: ${slug}`)
}

const entry = await getEntry('blog', slug)

if (!entry) {
  throw Error(`Invalid URL: ${slug}`)
}

const { Content } = await render(entry)

const ogImageAbsoluteUrl =
  entry?.data.external !== true && entry?.data.ogImagePath
    ? new URL(entry?.data.ogImagePath, SITE_URL).toString()
    : undefined
---

<ContentLayout
  title={entry?.data.title}
  date={entry?.data.date}
  ogImagePath={ogImageAbsoluteUrl}
>
  <BlogPostMeta
    title={entry?.data.title}
    description={entry?.data && 'description' in entry?.data ? entry?.data.description : undefined}
    publishDate={entry?.data.date.toISOString()}
    pagePath={`/blog/${slug}`}
    ogImageAbsoluteUrl={ogImageAbsoluteUrl as string}
    slot="meta"
  />
  <Content slot="content" />
</ContentLayout>
